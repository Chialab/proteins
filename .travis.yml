language: node_js

jobs:
  include:
    - stage: test
      env: CI_BUILD_TYPE=default
      node_js: 6
      install:
        - npm install
      script:
        - npm run test-default
    - stage: test
      env: CI_BUILD_TYPE=default
      node_js: 7
      install:
        - npm install
      script:
        - npm run test-default
    - stage: test
      os: linux
      env: CI_BUILD_TYPE=saucelabs
      node_js: 7
      install:
        - npm install
        - npm install karma-sauce-launcher
      script:
        - npm run test-saucelabs
    - stage: test
      os: linux
      env: CI_BUILD_TYPE=electron
      node_js: 7
      install:
        - export DISPLAY=':99.0'
        - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        - npm install
        - npm install electron karma-electron-launcher
      script:
        - npm run test-electron
    - stage: test
      os: osx
      env: CI_BUILD_TYPE=electron
      node_js: 7
      install:
        - export DISPLAY=':99.0'
        - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        - npm install
        - npm install electron karma-electron-launcher
      script:
        - npm run test-electron
    - stage: test
      os: osx
      env: CI_BUILD_TYPE=nativescript
      node_js: 7
      install:
        - export DISPLAY=':99.0'
        - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        - npm install -g nativescript
        - tns usage-reporting disable
        - tns error-reporting disable
        - npm install
      script:
        - npm run test-nativescript-ios
    - stage: test
      os: linux
      env: CI_BUILD_TYPE=nativescript ANDROID_HOME=$HOME/android-sdk
      language: android
      jdk: oraclejdk8
      node_js: 7
      android:
        components:
          - platform-tools
          - build-tools-23.0.1
          - android-23
          - extra-android-m2repository
          - sys-img-armeabi-v7a-android-19
      before_cache:
        # Do not cache a few Gradle files/directories (see https://docs.travis-ci.com/user/languages/java/#Caching)
        - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
      cache:
        directories:
          # Android SDK
          - $HOME/android-sdk-dl
          - $HOME/android-sdk
      install:
        # Download and unzip the Android SDK tools (if not already there thanks to the cache mechanism)
        - if test ! -e $HOME/android-sdk-dl/tools_r25.2.5-linux.zip ; then curl https://dl.google.com/android/repository/tools_r25.2.5-linux.zip > $HOME/android-sdk-dl/tools_r25.2.5-linux.zip ; fi
        - unzip -n $HOME/android-sdk-dl/tools_r25.2.5-linux.zip -d $HOME/android-sdk

        # Install or update Android SDK components (will not do anything if already up to date thanks to the cache mechanism)
        - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'tools'
        - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'platform-tools'
        - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'build-tools;23.0.1'
        - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'platforms;android-23'
        - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'extras;android;m2repository'
        - echo y | $HOME/android-sdk/tools/bin/sdkmanager 'system-images;android-19;default;armeabi-v7a'

        - export DISPLAY=':99.0'
        - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        - nvm install 7
        - npm install -g nativescript
        - tns usage-reporting disable
        - tns error-reporting disable
        - npm install
      before_script:
        - echo no | $HOME/android-sdk/tools/bin/avdmanager create avd --force --name test --package 'system-images;android-19;default;armeabi-v7a'
        - $HOME/android-sdk/tools/bin/emulator -avd test -no-audio -no-window
        - android-wait-for-emulator
      script:
        - npm run test-nativescript-android
    - stage: deploy
      os: linux
      env: CI_BUILD_TYPE=docs
      node_js: 7
      install:
        - npm install documentation
        - npm install
      script:
        - git config --global user.email "travis@travis-ci.org"
        - git config --global user.name "travis-ci"
        - git clone https://${GH_TOKEN}@github.com/Chialab/proteins.wiki.git wiki
        - ./node_modules/.bin/documentation build src/**/*.js -f md > ./wiki/API.md
        - cd wiki
        - git add .
        - git diff-index --quiet HEAD || git commit -m "Lastest api reference on successful travis build ${TRAVIS_BUILD_NUMBER} auto-pushed to wiki"
        - git push origin
    - stage: deploy
      os: linux
      env: CI_BUILD_TYPE=website CNAME=proteins.chialab.io
      node_js: 7
      install:
        - pip install --user awscli
        - aws configure set preview.cloudfront true
      before_script:
        - mkdir -p public
      script:
        - git config --global user.email "travis@travis-ci.org"
        - git config --global user.name "travis-ci"
        - git clone https://gitlab.com/chialab/project-pages.git pages
        - cd pages
        - npm install
        - cd ..
        - node ./pages/index.js .
      after_success:
        - for file in public/*.html; do mv -- "$file" "${file%%.html}"; done
        - for file in public/**/*.html; do mv -- "$file" "${file%%.html}"; done
        - aws s3 sync public s3://$CNAME/ --region eu-west-1 --size-only --exclude "*" --include "*.*" --delete
        - aws s3 sync public s3://$CNAME/ --region eu-west-1 --size-only --content-type text/html --exclude "*.*" --delete
        - aws cloudfront create-invalidation --paths '/*' --distribution-id $(aws cloudfront list-distributions | python -c 'import json, os, sys; print([d["Id"] for d in json.loads(sys.stdin.read()).get("DistributionList", {}).get("Items", []) if os.environ.get("CNAME") in d.get("Aliases", {}).get("Items", [])][0])')

  allow_failures:
    - env: CI_BUILD_TYPE=electron
    - env: CI_BUILD_TYPE=saucelabs
    - env: CI_BUILD_TYPE=nativescript
    - env: CI_BUILD_TYPE=docs
    - env: CI_BUILD_TYPE=website

addons:
  apt:
    packages:
      - xvfb

after_success:
  - cat coverage/report-lcov/*/lcov.info | ./node_modules/.bin/codecov
