language: node_js

jobs:
  include:
    - stage: test
      env: CI_BUILD_TYPE=default
      node_js: 9
      before_install:
        - yarn global add @chialab/rna-cli
      install:
        - yarn install
      script:
        - rna unit 'test/*.js' --node

    - stage: test
      env: CI_BUILD_TYPE=default
      node_js: 10
      before_install:
        - yarn global add @chialab/rna-cli
        - yarn add codecov
      install:
        - yarn install
      script:
        - rna unit 'test/*.js' --node --coverage
      after_success:
        - cat reports/unit/coverage/*/lcov.info | ./node_modules/.bin/codecov

    - stage: test
      os: linux
      env: CI_BUILD_TYPE=saucelabs
      node_js: 10
      before_install:
        - yarn global add @chialab/rna-cli
      install:
        - yarn install
      script:
        - rna unit 'test/*.js' --saucelabs --context 'test/context.html' --concurrency 1

    - stage: test
      os: linux
      env: CI_BUILD_TYPE=electron
      node_js: 10
      before_install:
        - yarn global add @chialab/rna-cli
      install:
        - yarn install
        - yarn add electron
      before_script:
        - export DISPLAY=':99.0'
        - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
      script:
        - rna unit 'test/*.js' --electron

    - stage: test
      os: osx
      env: CI_BUILD_TYPE=electron
      node_js: 10
      before_install:
        - yarn global add @chialab/rna-cli
      install:
        - yarn install
        - yarn add electron
      before_script:
        - export DISPLAY=':99.0'
        - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
      script:
        - rna unit 'test/*.js' --electron

    - stage: test
      os: osx
      env:
        - BuildiOS="12"
        - Xcode="10.0"
        - CI_BUILD_TYPE=nativescript
      osx_image: xcode10
      node_js: 10
      jdk: oraclejdk8
      before_install:
        - npm install -g nativescript
        - pip install --ignore-installed six
        - yarn global add @chialab/rna-cli
      install:
        - yarn install
      before_script:
        - export DISPLAY=':99.0'
        - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        - tns usage-reporting disable
        - tns error-reporting disable
      script:
        - rna unit 'test/*.js' --nativescript ios

    # Android emulator wont work in travis with api 28
    # - stage: test
    #   os: linux
    #   env: CI_BUILD_TYPE=nativescript
    #   language: android
    #   jdk: oraclejdk8
    #   node_js: 10
    #   android:
    #     components:
    #       - platform-tools
    #       - build-tools-28.0.2
    #       - android-28
    #       - extra-android-m2repository
    #       - sys-img-armeabi-v7a-android-28
    #   before_install:
    #     - mkdir -p "$ANDROID_HOME/licenses"
    #     - yes | sdkmanager tools
    #     - yes | sdkmanager "system-images;android-28;default;x86"
    #     - nvm install 10
    #     - npm install -g nativescript
    #     - yarn global add @chialab/rna-cli
    #   install:
    #     - yarn install
    #   before_script:
    #     - export DISPLAY=':99.0'
    #     - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    #     - tns usage-reporting disable
    #     - tns error-reporting disable
    #     - echo no | avdmanager create avd --force -n test -k "system-images;android-28;default;x86"
    #     - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &
    #     - android-wait-for-emulator
    #   script:
    #     - travis_wait travis_retry rna unit 'test/*.js' --nativescript android

    - stage: deploy
      os: linux
      env: CI_BUILD_TYPE=docs
      node_js: 10
      before_install:
        - yarn global add @chialab/rna-cli
      install:
        - yarn install
      before_script:
        - git config --global user.email "travis@travis-ci.org"
        - git config --global user.name "travis-ci"
      script:
        - git clone https://${GH_TOKEN}@github.com/Chialab/proteins.wiki.git wiki
        - rna documentation 'src/**/*.js' --output ./wiki/API.md
        - cd wiki
        - git add .
        - git diff-index --quiet HEAD || git commit -m "Lastest api reference on successful travis build ${TRAVIS_BUILD_NUMBER} auto-pushed to wiki"
        - git push origin

    - stage: deploy
      os: linux
      env: CI_BUILD_TYPE=website CNAME=proteins.chialab.io S3_BUCKET=chialab-static-sites
      node_js: 10
      install:
        - pip install --user awscli
      before_script:
        - aws configure set preview.cloudfront true
        - git config --global user.email "travis@travis-ci.org"
        - git config --global user.name "travis-ci"
        - mkdir -p public
      script:
        - git clone https://gitlab.com/chialab/project-pages.git pages
        - cd pages
        - npm install
        - cd ..
        - node ./pages/index.js . --extra.ga 'UA-149131-70'
      after_success:
        - for file in public/*.html; do mv -- "$file" "${file%%.html}"; done
        - for file in public/**/*.html; do mv -- "$file" "${file%%.html}"; done
        - sed -i 's/\.html//g' public/service-worker.js
        - aws s3 sync public s3://$S3_BUCKET/$CNAME/ --region eu-west-1 --size-only --exclude "*" --include "*.*" --delete
        - aws s3 sync public s3://$S3_BUCKET/$CNAME/ --region eu-west-1 --size-only --content-type text/html --exclude "*.*" --delete
        - aws cloudfront create-invalidation --paths '/*' --distribution-id $(aws cloudfront list-distributions --query "DistributionList.Items[?contains(Aliases.Items, '${CNAME}')].Id" --output text)

  allow_failures:
    - env: CI_BUILD_TYPE=electron
    - env: CI_BUILD_TYPE=saucelabs
    - env: CI_BUILD_TYPE=nativescript
    - env: CI_BUILD_TYPE=docs
    - env: CI_BUILD_TYPE=website

addons:
  apt:
    packages:
      - xvfb
